version: '3.8'

networks:
  amazon-tracker-dev:
    driver: bridge

volumes:
  etcd_data:

services:
  # etcd for APISIX Configuration Storage
  etcd:
    image: bitnami/etcd:3.5
    container_name: amazon-tracker-etcd-simple
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_INITIAL_ADVERTISE_PEER_URLS: "http://0.0.0.0:2380"
      ETCD_LISTEN_PEER_URLS: "http://0.0.0.0:2380"
      ETCD_INITIAL_CLUSTER: "node1=http://0.0.0.0:2380"
      ETCD_NAME: node1
      ETCD_DATA_DIR: /etcd-data
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - etcd_data:/etcd-data
    networks:
      - amazon-tracker-dev
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # APISIX API Gateway - using host networking for simplicity
  apisix:
    image: apache/apisix:3.6.0-debian
    container_name: amazon-tracker-apisix-simple
    environment:
      APISIX_ETCD_HOST: etcd
      APISIX_ETCD_PREFIX: "/apisix"
      APISIX_ETCD_TIMEOUT: 30
    ports:
      - "9080:9080"   # HTTP Gateway
      - "9180:9180"   # Admin API
      - "9443:9443"   # HTTPS Gateway
    depends_on:
      etcd:
        condition: service_healthy
    networks:
      - amazon-tracker-dev
    volumes:
      - ./config/apisix/config.working.yaml:/usr/local/apisix/conf/config.yaml:ro
      - ./logs/apisix:/usr/local/apisix/logs
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Connect to host services
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9080/apisix/status"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
