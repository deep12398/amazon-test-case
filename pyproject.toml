[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "amazon-tracker"
version = "1.0.0"
description = "多租户Amazon产品追踪分析系统"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Amazon Tracker Team", email = "team@amazontracker.com"},
]
keywords = ["amazon", "product-tracking", "saas", "analytics", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

dependencies = [
    # ===== Web框架和API =====
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6", # 文件上传支持
    # ===== 数据库和ORM =====
    "sqlalchemy>=2.0.23",
    "alembic>=1.13.0",
    "asyncpg>=0.29.0", # PostgreSQL异步驱动
    "psycopg2-binary>=2.9.9", # PostgreSQL同步驱动
    "supabase>=2.0.0", # Supabase客户端
    # ===== 数据验证和序列化 =====
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "email-validator>=2.1.0",
    # ===== 认证和安全 =====
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    # ===== 缓存和会话 =====
    "redis>=5.0.1",
    "aioredis>=2.0.1",
    # ===== 任务队列 =====
    "celery>=5.3.4",
    "celery[sqs]>=5.3.4", # AWS SQS支持
    "kombu>=5.3.4",
    # ===== AWS服务 =====
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    # ===== 网页抓取 =====
    "apify-client>=1.7.0",
    "httpx>=0.25.2",
    "aiohttp>=3.9.1",
    # ===== AI和LLM =====
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "openai>=1.6.1",
    # ===== 数据处理 =====
    "pandas>=2.1.4",
    "numpy>=1.26.2",
    "arrow>=1.3.0", # 时间处理
    # ===== HTTP客户端 =====
    "httpx>=0.25.2",
    "requests>=2.31.0",
    "tenacity>=8.2.3", # 重试机制
    # ===== 配置管理 =====
    "python-dotenv>=1.0.0",
    # ===== 日志和监控 =====
    "loguru>=0.7.2",
    "structlog>=23.2.0",
    "sentry-sdk[fastapi]>=1.40.0",
    # ===== 可观测性 =====
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.42b0",
    "opentelemetry-instrumentation-redis>=0.42b0",
    "opentelemetry-exporter-otlp>=1.21.0",
    "prometheus-client>=0.19.0",
    # ===== 工具库 =====
    "python-slugify>=8.0.1",
    "uuid>=1.30",
    "typing-extensions>=4.8.0",
    "greenlet>=3.2.4",
    "pyjwt>=2.10.1",
    "opentelemetry-exporter-jaeger-thrift>=1.21.0",
    "opentelemetry-instrumentation-httpx>=0.58b0",
    "deprecated>=1.2.18",
    "opentelemetry-exporter-otlp-proto-grpc>=1.37.0",
]

[project.optional-dependencies]
# 开发环境依赖
dev = [
    # 代码质量
    "black>=23.12.0",
    "ruff>=0.1.8",
    "pre-commit>=3.6.0",
    "mypy>=1.8.0",

    # 测试
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "faker>=21.0.0",
    "factory-boy>=3.3.0",
    "httpx>=0.25.2",  # 测试客户端

    # 开发工具
    "ipython>=8.18.0",
    "rich>=13.7.0",  # 美化输出
    "watchdog>=3.0.0",  # 文件监控
]

# 生产环境依赖
prod = [
    "gunicorn>=21.2.0",
]

# 测试环境依赖
test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",  # 并行测试
    "coverage>=7.3.4",
    "faker>=21.0.0",
    "factory-boy>=3.3.0",
]

# 文档生成依赖
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.14",
    "mkdocs-swagger-ui-tag>=0.6.8",
]

# 所有依赖
all = [
    "amazon-tracker[dev,prod,test,docs]"
]

[project.urls]
Homepage = "https://github.com/yourusername/amazon-tracker"
Documentation = "https://github.com/yourusername/amazon-tracker#readme"
Repository = "https://github.com/yourusername/amazon-tracker.git"
Issues = "https://github.com/yourusername/amazon-tracker/issues"

[project.scripts]
# CLI命令行工具
amazon-tracker = "amazon_tracker.cli:main"

# ===== Ruff配置 (代码检查) =====
[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused-function-argument
    "SIM",    # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["ARG001", "ARG002", "ARG005"]

# ===== Black配置 (代码格式化) =====
[tool.black]
target-version = ['py311']
line-length = 88
skip-string-normalization = false
skip-magic-trailing-comma = false

# ===== MyPy配置 (类型检查) =====
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "apify_client.*",
    "celery.*",
    "kombu.*",
    "supabase.*",
    "boto3.*",
    "botocore.*",
]
ignore_missing_imports = true

# ===== Pytest配置 =====
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--disable-warnings",
    "--cov=amazon_tracker",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]
asyncio_mode = "auto"

# ===== Coverage配置 =====
[tool.coverage.run]
source = ["amazon_tracker"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/migrations/*",
    "*/alembic/*",
    "amazon_tracker/cli.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# ===== Alembic配置引用 =====
[tool.alembic]
# alembic配置将在alembic.ini中单独配置

# ===== Celery配置引用 =====
[tool.celery]

[dependency-groups]
dev = [
    "pyright>=1.1.405",
]
# celery配置将在celery_config.py中单独配置

# ===== 项目结构说明 =====
# amazon_tracker/
# ├── services/
# │   ├── user_service/          # 用户管理服务
# │   ├── core_service/          # 核心业务服务
# │   └── crawler_service/       # 爬虫服务
# ├── common/                    # 共享组件
# │   ├── database/             # 数据库相关
# │   ├── auth/                 # 认证相关
# │   ├── cache/                # 缓存相关
# │   └── utils/                # 工具函数
# ├── config/                   # 配置文件
# ├── migrations/               # 数据库迁移
# ├── tests/                    # 测试文件
# └── scripts/                  # 脚本文件
