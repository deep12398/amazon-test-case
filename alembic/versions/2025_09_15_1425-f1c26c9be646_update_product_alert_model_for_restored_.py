"""update_product_alert_model_for_restored_alerts_api

Revision ID: f1c26c9be646
Revises: 07b36689d835
Create Date: 2025-09-15 14:25:46.852571

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f1c26c9be646'
down_revision: Union[str, None] = 'b69614c7697a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(None, 'competitor_relationships', 'products', ['competitor_product_id'], ['id'])
    op.create_foreign_key(None, 'competitor_relationships', 'competitor_sets', ['competitor_set_id'], ['id'])
    op.create_foreign_key(None, 'competitor_sets', 'products', ['main_product_id'], ['id'])
    op.create_foreign_key(None, 'crawl_tasks', 'products', ['product_id'], ['id'])
    op.add_column('product_alerts', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('product_alerts', sa.Column('target_value', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('product_alerts', sa.Column('threshold_percentage', sa.Numeric(precision=5, scale=2), nullable=True))
    op.add_column('product_alerts', sa.Column('current_value', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('product_alerts', sa.Column('last_triggered_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('product_alerts', sa.Column('trigger_count', sa.Integer(), nullable=False))
    op.add_column('product_alerts', sa.Column('notification_methods', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('product_alerts', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_product_alerts_is_deleted'), table_name='product_alerts')
    op.create_index('ix_alert_active_deleted', 'product_alerts', ['is_active', 'is_deleted'], unique=False)
    op.create_index('ix_alert_type', 'product_alerts', ['alert_type'], unique=False)
    op.create_foreign_key(None, 'product_alerts', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'product_alerts', 'products', ['product_id'], ['id'])
    op.drop_column('product_alerts', 'triggered_at')
    op.drop_column('product_alerts', 'notification_settings')
    op.drop_column('product_alerts', 'condition')
    op.create_foreign_key(None, 'product_price_history', 'products', ['product_id'], ['id'])
    op.create_foreign_key(None, 'product_rank_history', 'products', ['product_id'], ['id'])
    op.create_index('ix_product_is_competitor', 'products', ['tenant_id', 'is_competitor'], unique=False)
    op.alter_column('user_sessions', 'refresh_token',
               existing_type=sa.VARCHAR(length=1024),
               type_=sa.Text(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_sessions', 'refresh_token',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=1024),
               existing_nullable=True)
    op.drop_index('ix_product_is_competitor', table_name='products')
    op.drop_constraint(None, 'product_rank_history', type_='foreignkey')
    op.drop_constraint(None, 'product_price_history', type_='foreignkey')
    op.add_column('product_alerts', sa.Column('condition', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('product_alerts', sa.Column('notification_settings', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('product_alerts', sa.Column('triggered_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'product_alerts', type_='foreignkey')
    op.drop_constraint(None, 'product_alerts', type_='foreignkey')
    op.drop_index('ix_alert_type', table_name='product_alerts')
    op.drop_index('ix_alert_active_deleted', table_name='product_alerts')
    op.create_index(op.f('ix_product_alerts_is_deleted'), 'product_alerts', ['is_deleted'], unique=False)
    op.alter_column('product_alerts', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('product_alerts', 'notification_methods')
    op.drop_column('product_alerts', 'trigger_count')
    op.drop_column('product_alerts', 'last_triggered_at')
    op.drop_column('product_alerts', 'current_value')
    op.drop_column('product_alerts', 'threshold_percentage')
    op.drop_column('product_alerts', 'target_value')
    op.drop_column('product_alerts', 'created_by')
    op.drop_constraint(None, 'crawl_tasks', type_='foreignkey')
    op.drop_constraint(None, 'competitor_sets', type_='foreignkey')
    op.drop_constraint(None, 'competitor_relationships', type_='foreignkey')
    op.drop_constraint(None, 'competitor_relationships', type_='foreignkey')
    # ### end Alembic commands ###
